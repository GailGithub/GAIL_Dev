%Run TestcubMC on the step function
clear all, close all
clc
format compact

test.nrep=2;
fun.funtype='gaussian';
in_param.dim=1;
in_param.measure='uniform';

% in_param.measure='normal';
% in_param.interval=[-inf(1,in_param.dim);inf(1,in_param.dim)];
in_param.tol=1e-3;
in_param.n0=2^13;
in_param.interval=[zeros(1,in_param.dim);ones(1,in_param.dim)];
bmina=in_param.interval(2,:)-in_param.interval(1,:);
test.howoftenrep=2;
shapemin=1e-6;
shapemax=1;

test.randch.shapeoverall=...
    shapemin*(shapemax/shapemin).^rand(test.nrep,in_param.dim);
scalemin=.1;
scalemax=10;

test.randch.scaleoverall=...
    scalemin*(scalemax/scalemin).^rand(test.nrep,in_param.dim);
test.randch.centercoverall=rand(test.nrep,in_param.dim);

overmultcmin=1e-2;
overmultcmax=1e2; 
test.randch.addcoverall=ones(test.nrep,in_param.dim);

test.randch.gaussian1=sqrt(pi)*test.randch.shapeoverall./(2*repmat(bmina,test.nrep,1)).*...
        (erf((repmat(in_param.interval(2,:),test.nrep,1)-test.randch.centercoverall)...
        ./test.randch.shapeoverall)-erf((repmat(in_param.interval(1,:),test.nrep,1)-...
        test.randch.centercoverall)./test.randch.shapeoverall));
test.randch.gaussian2=sqrt(pi)*test.randch.shapeoverall./...
    (2*sqrt(2)*repmat(bmina,test.nrep,1))...
        .*(erf(sqrt(2)*(repmat(in_param.interval(2,:),test.nrep,1) ...
        -test.randch.centercoverall)...
        ./test.randch.shapeoverall) - ...
        erf(sqrt(2)*(repmat(in_param.interval(1,:),test.nrep,1) ...
        -test.randch.centercoverall)...
        ./test.randch.shapeoverall));    
test.randch.overmultcoverall=sqrt(overmultcmin*(overmultcmax/overmultcmin)...
    .^rand(test.nrep,1)./(prod((test.randch.addcoverall.^2+...
    2*test.randch.addcoverall.*test.randch.scaleoverall.*test.randch.gaussian1...
    +test.randch.scaleoverall.^2.*test.randch.gaussian2),2)-...
    prod((test.randch.addcoverall+test.randch.scaleoverall.* ...
    test.randch.gaussian1).^2,2)));
test.randch.overaddcoverall=ones(test.nrep,1)-...
    (test.randch.overmultcoverall.*prod((test.randch.addcoverall ...
        + test.randch.scaleoverall.*test.randch.gaussian1),2));


test.randchoicefun=@randchoicegaussiand1;

test.whichsample={'iid','iidheavy','quad','quadgk','chebfun','chebfunheavy'};
%test.whichsample={'iid','iidheavy','Sobol','Sobolheavy'};
[res,out_param]=TestcubMCDiffSettings(test,fun,in_param,out_param);
