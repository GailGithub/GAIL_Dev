%Low discrepancy point figures%% Set-up formatformat compactset(0,'defaultaxesfontsize',20,'defaultaxesfontname','Helvetica')clear all, close all%% Set-up parametersd=4;n=64;meigvec=[1 2 3 4 sqrt(n)-1 n-1 inf];lambvec=(1:d);testfun=@(x,lambvec)sum(exp(-x./repmat(lambvec,size(x,1),1))./repmat(lambvec,size(x,1),1),2);inttest=sum(1-exp(-1./lambvec));%testfun=@(x,lambvec)prod(exp(-x./repmat(lambvec,size(x,1),1)),2)./prod(lambvec);%inttest=prod(1-exp(-1./lambvec));%% Construct random pointsrng(47); xran=rand(n,d);errran=inttest-mean(testfun(xran,lambvec));disp(['Relative Rand Error = ' num2str(abs(errran)/inttest)])%% Construct Gridnrootd=floor(n^(1/d));nmore=log2(n/nrootd^d);nj=repmat(floor(nrootd),d,1); nj(1:nmore)=nj(1:nmore)*2;Gmat=diag(1./nj);ntot=cumprod(nj);imat=0:nj(1)-1;for j=2:d    add=repmat(0:nj(j)-1,ntot(j-1),1);    imat=[repmat(imat,1,nj(j)); add(:)'];end   Delta=repmat(1./(2*nj)',n,1);xgrid=(Gmat*imat)' + Delta;errgrid=inttest-mean(testfun(xgrid,lambvec));disp(['Relative Grid Error = ' num2str(abs(errgrid)/inttest)])%% Construct Grid Domainq=8; %number of levelsnd=q^d;Gmat=eye(d)/q;imat=0:q-1; ntot=cumprod(q*ones(d,1));for j=2:d    add=repmat(0:q-1,ntot(j-1),1);    imat=[repmat(imat,1,q); add(:)'];end   Delta=repmat(1./(2*q),nd,d);xdom=(Gmat*imat)' + Delta;errdom=inttest-mean(testfun(xdom,lambvec));disp(['Relative Grid Domain Error = ' num2str(abs(errdom)/inttest)])%% Construct Latticehgen=245; hvec=ones(1,d);xlat=zeros(n,d);xlat(:,1)=(0:n-1)';for j=2:d;    hvec(j)=mod(hgen*hvec(j-1),n);    xlat(:,j)=mod(xlat(:,j-1)*hgen,n);endDelta=repmat(1/(2*n),n,d);xlat=xlat/n+Delta;errlat=inttest-mean(testfun(xlat,lambvec));disp(['Relative Lattice Error = ' num2str(abs(errlat)/inttest)])%% Construct orthogonal arraymdig=3;Gmat=[1 0 0 0 0 0   0 1 0 0 0 0   0 0 1 0 0 0   0 0 0 1 0 0   0 0 0 0 1 0   0 0 0 0 0 1   1 0 0 1 0 0   0 1 0 0 1 0   0 0 1 0 0 1   1 1 0 1 0 0   0 1 1 0 1 0   1 1 1 0 0 1];xorth=zeros(n,d);m=log2(n);imat=zeros(m,n);imat(1,2)=1;twoj=2;for j=2:m    twojm1=twoj; twoj=2*twoj;    imat(1:j,twojm1+1:twoj)=[imat(1:j-1,1:twojm1);ones(1,twojm1)];endGi=mod(Gmat*imat,2);Gi=repmat(2.^(-1:-1:-mdig)',d,n).*Gi;for j=1:d;    xorth(:,j)=sum(Gi((j-1)*mdig+(1:mdig),:),1)';endDelta=repmat(1/(2.^(mdig+1)),n,d);xorth=xorth+Delta;errorth=inttest-mean(testfun(xorth,lambvec));disp(['Relative Orthogonal Array Error = ' num2str(abs(errorth)/inttest)])%% Construct Sobolmdig=6;Gmat=[    0 0 0 0 0 1     0 0 0 0 1 0     0 0 0 1 0 0     0 0 1 0 0 0     0 1 0 0 0 0     1 0 0 0 0 0     1 0 0 0 0 0     0 1 0 0 0 0     0 0 1 0 0 0     0 0 0 1 0 0     0 0 0 0 1 0     0 0 0 0 0 1     1 1 1 1 1 1     0 1 0 1 0 1     0 0 1 1 0 0     0 0 0 1 0 0     0 0 0 0 1 1     0 0 0 0 0 1     1 0 1 1 0 1     0 1 1 0 1 1     0 0 1 1 1 1     0 0 0 1 0 1     0 0 0 0 1 0     0 0 0 0 0 1 ];  xsob=zeros(n,d);m=log2(n);imat=zeros(m,n);imat(1,2)=1;twoj=2;for j=2:m    twojm1=twoj; twoj=2*twoj;    imat(1:j,twojm1+1:twoj)=[imat(1:j-1,1:twojm1);ones(1,twojm1)];endGi=mod(Gmat*imat,2);Gi=repmat(2.^(-1:-1:-mdig)',d,n).*Gi;for j=1:d;    xsob(:,j)=sum(Gi((j-1)*mdig+(1:mdig),:),1)';endDelta=repmat(1/(2.^(mdig+1)),n,d);xsob=xsob+Delta;errsob=inttest-mean(testfun(xsob,lambvec));disp(['Relative Sobol Net Error = ' num2str(abs(errsob)/inttest)])%% Draw random points in 2-D projectionsfor j=1:d    for k=j+1:d        figure; plot(xran(:,j),xran(:,k),'r.','MarkerSize',30); hold on        axis('equal'); axis([0 1 0 1]);         set(gca,'xtick',0:0.25:1,'ytick',0:0.25:1,'xticklabel',[],'yticklabel',[])        xlabel(['\it{x_' int2str(j) '}']);        ylabel(['\it{x_' int2str(k) '}']);        eval(['print -depsc ran' int2str(j) int2str(k) '.eps']);    endend%% Draw 3-D random pointsfigure;plot3(xran(:,1),xran(:,2),xran(:,3),'r.','MarkerSize',30); hold onaxis('equal'); axis([0 1 0 1]); set(gca,'xtick',0:0.25:1,'ytick',0:0.25:1,'ztick',0:0.25:1,'xticklabel',[],'yticklabel',[],'zticklabel',[])xlabel('\it{x_1}'); ylabel('\it{x_2}'); zlabel('\it{x_3}');vrml(gcf,'ran3d.wrml')%% Discrepancy of griddisp('Projection discrepancy pattern for grid')for i=1:numel(meigvec)    meig=meigvec(i);    [pdp,disc]=projdis(xgrid,meig);    fprintf(1,'%2.0f & (%1.4f',meig,pdp(1))    fprintf(1,', %1.4f',pdp(2:d))    fprintf(') \n')end%% Draw Gridfor j=1:d    for k=j+1:d        figure; plot(xgrid(:,j),xgrid(:,k),'r.','MarkerSize',30); hold on        axis('equal'); axis([0 1 0 1]);         set(gca,'xtick',0:0.25:1,'ytick',0:0.25:1,'xticklabel',[],'yticklabel',[])        xlabel(['\it{x_' int2str(j) '}']);        ylabel(['\it{x_' int2str(k) '}']);        eval(['print -depsc grid' int2str(j) int2str(k) '.eps']);    endend%% Draw Dual Gridm=20;kvec=-m:m;[kkx,kky]=meshgrid(kvec); kk=[kkx(:) kky(:)];for j=1:d    for k=j+1:d        wh=find(all(mod(kk*Gmat([j k],:),1)==0,2));        dualgrid=kk(wh,:);        figure; plot(dualgrid(:,1),dualgrid(:,2),'r.','MarkerSize',30); hold on        axis('equal'); axis([-m m -m m]);         set(gca,'xtick',-m:10:m,'ytick',-m:10:m,'xticklabel',-m:10:m,'yticklabel',-m:10:m)        xlabel(['\it{\omega_' int2str(j) '}']);        ylabel(['\it{\omega_' int2str(k) '}']);        titletext='\it{';        for jj=1:d            if (jj~=j)&&(jj~=k);                 titletext=[titletext '\omega_' int2str(jj) '='];            end        end        titletext=[titletext '0}'];        title(titletext);        eval(['print -depsc dualgrid' int2str(j) int2str(k) '.eps']);    endend%% Construct G for Walsh gridmdig=2;Gmat=[1 0 0 0 0 0      0 1 0 0 0 0      0 0 1 0 0 0      0 0 0 1 0 0      0 0 0 0 1 0      0 0 0 0 0 0      0 0 0 0 0 1      0 0 0 0 0 0];%% Draw dual grid with Walsh coefficientslog2m=6;m=2^log2m;mplot=40;kvec=0:m-1;kmat=0:1; mtot=cumprod(2*ones(log2m,1));for j=2:log2m    add=repmat(0:1,mtot(j-1),1);    kmat=[repmat(kmat,1,2); add(:)'];endfor j=1:d    kmatGj=mod(kmat(1:mdig,:)'*Gmat((j-1)*mdig+(1:mdig),:),2);    for k=j+1:d        kmatGk=mod(kmat(1:mdig,:)'*Gmat((k-1)*mdig+(1:mdig),:),2);        dualgridW=[];        for jj=1:m            wh=find(all(mod(repmat(kmatGj(jj,:),m,1)-kmatGk,2)==0,2));            dualgridW=[dualgridW; repmat(kvec(jj),numel(wh),1) kvec(wh)'];        end        figure; plot(dualgridW(:,1),dualgridW(:,2),'r.','MarkerSize',30); hold on        axis('equal'); axis([0 mplot 0 mplot]);         set(gca,'xtick',0:10:mplot,'ytick',0:10:mplot,'xticklabel',0:10:mplot,'yticklabel',0:10:mplot)        xlabel(['\it{\omega_' int2str(j) '}']);        ylabel(['\it{\omega_' int2str(k) '}']);        titletext='\it{';        for jj=1:d            if (jj~=j)&&(jj~=k);                 titletext=[titletext '\omega_' int2str(jj) '='];            end        end        titletext=[titletext '0}'];        title(titletext);        eval(['print -depsc dualgridWalsh' int2str(j) int2str(k) '.eps']);    endend%% Draw Grid Domainfor j=1:d    for k=j+1:d        figure; plot(xdom(:,j),xdom(:,k),'r.','MarkerSize',30); hold on        axis('equal'); axis([0 1 0 1]);         set(gca,'xtick',0:0.25:1,'ytick',0:0.25:1,'xticklabel',[],'yticklabel',[])        xlabel(['\it{x_' int2str(j) '}']);        ylabel(['\it{x_' int2str(k) '}']);        eval(['print -depsc dom' int2str(j) int2str(k) '.eps']);    endend%% Draw Dual Domainm=20;kvec=-m:m;[kkx,kky]=meshgrid(kvec); kk=[kkx(:) kky(:)];for j=1:d    for k=j+1:d        wh=find(all(mod(kk*Gmat([j k],:),1)==0,2));        dualdom=kk(wh,:);        figure; plot(dualdom(:,1),dualdom(:,2),'r.','MarkerSize',30); hold on        axis('equal'); axis([-m m -m m]);         set(gca,'xtick',-m:10:m,'ytick',-m:10:m,'xticklabel',-m:10:m,'yticklabel',-m:10:m)        xlabel(['\it{\omega_' int2str(j) '}']);        ylabel(['\it{\omega_' int2str(k) '}']);        titletext='\it{';        for jj=1:d            if (jj~=j)&&(jj~=k);                 titletext=[titletext '\omega_' int2str(jj) '='];            end        end        titletext=[titletext '0}'];        title(titletext);        eval(['print -depsc dualdom' int2str(j) int2str(k) '.eps']);    endend%% Discrepancy of latticedisp('Projection discrepancy pattern for lattice')for i=1:numel(meigvec)    meig=meigvec(i);    [pdp,disc]=projdis(xlat,meig);    fprintf(1,'%2.0f & (%1.4f',meig,pdp(1))    fprintf(1,', %1.4f',pdp(2:d))    fprintf(') \n')end%% Draw Latticefor j=1:d    for k=j+1:d        figure; plot(xlat(:,j),xlat(:,k),'r.','MarkerSize',30); hold on        axis('equal'); axis([0 1 0 1]);         set(gca,'xtick',0:0.25:1,'ytick',0:0.25:1,'xticklabel',[],'yticklabel',[])        xlabel(['\it{x_' int2str(j) '}']);        ylabel(['\it{x_' int2str(k) '}']);        eval(['print -depsc lat' int2str(j) int2str(k) '.eps']);    endendClat=eye(d);Clat(:,1)=hvec'/n;Clatdual=inv(Clat');%% Draw dual latticem=20;kvec=-m:m;[kkx,kky]=meshgrid(kvec); kk=[kkx(:) kky(:)];for j=1:d    for k=j+1:d        wh=find(mod(kk*hvec([1 k-j+1])',n)==0);        dual=kk(wh,:);        figure; plot(dual(:,1),dual(:,2),'r.','MarkerSize',30); hold on        axis('equal'); axis([-m m -m m]);         set(gca,'xtick',-m:10:m,'ytick',-m:10:m,'xticklabel',-m:10:m,'yticklabel',-m:10:m)        xlabel(['\it{\omega_' int2str(j) '}']);        ylabel(['\it{\omega_' int2str(k) '}']);        titletext='\it{';        for jj=1:d            if (jj~=j)&&(jj~=k);                 titletext=[titletext '\omega_' int2str(jj) '='];            end        end        titletext=[titletext '0}'];        title(titletext);        eval(['print -depsc duallat' int2str(j) int2str(k) '.eps']);    endend%% Discrepancy of orthogonal arraydisp('Projection discrepancy pattern for orthogonal array')for i=1:numel(meigvec)    meig=meigvec(i);    [pdp,disc]=projdis(xorth,meig);    fprintf(1,'$%2.0f$ & $(%1.4f',meig,pdp(1))    fprintf(1,', %1.4f',pdp(2:d))    fprintf(')$ \n')end%% Draw orthogonal arrayfor j=1:d    for k=j+1:d        figure; plot(xorth(:,j),xorth(:,k),'r.','MarkerSize',30); hold on        axis('equal'); axis([0 1 0 1]);         set(gca,'xtick',0:0.25:1,'ytick',0:0.25:1,'xticklabel',[],'yticklabel',[])        xlabel(['\it{x_' int2str(j) '}']);        ylabel(['\it{x_' int2str(k) '}']);        eval(['print -depsc orth' int2str(j) int2str(k) '.eps']);    endend%% Draw 3-D orthogonal arrayfigure;plot3(xorth(:,1),xorth(:,2),xorth(:,3),'r.','MarkerSize',30); hold onaxis('equal'); axis([0 1 0 1]); set(gca,'xtick',0:0.5:1,'ytick',0:0.5:1,'ztick',0:0.5:1,'xticklabel',0:0.5:1,'yticklabel',0:0.5:1,'zticklabel',0:0.5:1)xlabel('\it{x_1}'); ylabel('\it{x_2}'); zlabel('\it{x_3}');%vrml(gcf,'orth3d.wrml')%% Draw dual orthogonal arraymdig=6;log2m=6;m=2^log2m;mplot=40;kvec=0:m-1;kmat=0:1; mtot=cumprod(2*ones(log2m,1));for j=2:log2m    add=repmat(0:1,mtot(j-1),1);    kmat=[repmat(kmat,1,2); add(:)'];endfor j=1:d    kmatGj=mod(kmat(1:mdig,:)'*Gmat((j-1)*mdig+(1:mdig),:),2);    for k=j+1:d        kmatGk=mod(kmat(1:mdig,:)'*Gmat((k-1)*mdig+(1:mdig),:),2);        dualorth=[];        for jj=1:m            wh=find(all(mod(repmat(kmatGj(jj,:),m,1)-kmatGk,2)==0,2));            dualorth=[dualorth; repmat(kvec(jj),numel(wh),1) kvec(wh)'];        end        figure; plot(dualorth(:,1),dualorth(:,2),'r.','MarkerSize',30); hold on        axis('equal'); axis([0 mplot 0 mplot]);         set(gca,'xtick',0:10:mplot,'ytick',0:10:mplot,'xticklabel',0:10:mplot,'yticklabel',0:10:mplot)        xlabel(['\it{\omega_' int2str(j) '}']);        ylabel(['\it{\omega_' int2str(k) '}']);        titletext='\it{';        for jj=1:d            if (jj~=j)&&(jj~=k);                 titletext=[titletext '\omega_' int2str(jj) '='];            end        end        titletext=[titletext '0}'];        title(titletext);        eval(['print -depsc dualorth' int2str(j) int2str(k) '.eps']);    endend%% Discrepancy of Soboldisp('Projection discrepancy pattern for Sobol')for i=1:numel(meigvec)    meig=meigvec(i);    [pdp,disc]=projdis(xsob,meig);    fprintf(1,'$%2.0f$ & $(%1.4f',meig,pdp(1))    fprintf(1,', %1.4f',pdp(2:d))    fprintf(')$ \n')end%% Draw Sobolfor j=1:d    for k=j+1:d        figure; plot(xsob(:,j),xsob(:,k),'r.','MarkerSize',30); hold on        axis('equal'); axis([0 1 0 1]);        set(gca,'xtick',0:0.25:1,'ytick',0:0.25:1,'xticklabel',[],'yticklabel',[])        xlabel(['\it{x_' int2str(j) '}']);        ylabel(['\it{x_' int2str(k) '}']);        eval(['print -depsc sobol' int2str(j) int2str(k) '.eps']);        for mm=0:mdig            figure; plot(xsob(:,j),xsob(:,k),'r.','MarkerSize',30); hold on            axis('equal'); axis([0 1 0 1]);            %set(gca,'xtick',0:0.25:1,'ytick',0:0.25:1,'xticklabel',[],'yticklabel',[])            xlabel(['\it{x_' int2str(j) '}']);            ylabel(['\it{x_' int2str(k) '}']);            twomm=2^mm; twommm=2^(mdig-mm);            if twomm>1;                 xgridx=[(1:twomm-1)/twomm;(1:twomm-1)/twomm];                xgridy=[zeros(1,twomm-1); ones(1,twomm-1)];                plot(xgridx,xgridy,'--k','linewidth',2)                %set(gca,'xtick',(0:twomm)/twomm,'ytick',(0:twommm)/twommm,'Xgrid','on','Ygrid','on')             end            if twommm>1;                 ygridy=[(1:twommm-1)/twommm;(1:twommm-1)/twommm];                ygridx=[zeros(1,twommm-1); ones(1,twommm-1)];                plot(ygridx,ygridy,'--k','linewidth',2)                %set(gca,'xtick',(0:twomm)/twomm,'ytick',(0:twommm)/twommm,'Xgrid','on','Ygrid','on')            end            eval(['print -depsc sobol' int2str(j) int2str(k) 'grid' int2str(mm) '.eps']);            %keyboard        end    endend%% Draw 3-D Sobolfigure;plot3(xsob(:,1),xsob(:,2),xsob(:,3),'r.','MarkerSize',30); hold onaxis('equal'); axis([0 1 0 1]); set(gca,'xtick',0:0.5:1,'ytick',0:0.5:1,'ztick',0:0.5:1,'xticklabel',0:0.5:1,'yticklabel',0:0.5:1,'zticklabel',0:0.5:1)xlabel('\it{x_1}'); ylabel('\it{x_2}'); zlabel('\it{x_3}');%vrml(gcf,'sob3d.wrml')%% Draw dual Sobollog2m=6;m=2^log2m;mplot=40;kvec=0:m-1;kmat=0:1; mtot=cumprod(2*ones(log2m,1));for j=2:log2m    add=repmat(0:1,mtot(j-1),1);    kmat=[repmat(kmat,1,2); add(:)'];endfor j=1:d    kmatGj=mod(kmat(1:mdig,:)'*Gmat((j-1)*mdig+(1:mdig),:),2);    for k=j+1:d        kmatGk=mod(kmat(1:mdig,:)'*Gmat((k-1)*mdig+(1:mdig),:),2);        dualsob=[];        for jj=1:m            wh=find(all(mod(repmat(kmatGj(jj,:),m,1)-kmatGk,2)==0,2));            dualsob=[dualsob; repmat(kvec(jj),numel(wh),1) kvec(wh)'];        end        figure; plot(dualsob(:,1),dualsob(:,2),'r.','MarkerSize',30); hold on        axis('equal'); axis([0 mplot 0 mplot]);         set(gca,'xtick',0:10:mplot,'ytick',0:10:mplot,'xticklabel',0:10:mplot,'yticklabel',0:10:mplot)        xlabel(['\it{\omega_' int2str(j) '}']);        ylabel(['\it{\omega_' int2str(k) '}']);        titletext='\it{';        for jj=1:d            if (jj~=j)&&(jj~=k);                 titletext=[titletext '\omega_' int2str(jj) '='];            end        end        titletext=[titletext '0}'];        title(titletext);        eval(['print -depsc dualsob' int2str(j) int2str(k) '.eps']);    endend%% Draw orthogonal array% xf=[0:3 0:3 0:3 0:3; 0 0 0 0 1 1 1 1 2 2 2 2 3 3 3 3]/4 + 1/8;% figure; h=plot(xf(1,:),xf(2,:),'rs'); set(h,'LineWidth',6); hold on% axis('equal'); axis([0 1 0 1]); % %title('16 points, 4 factors')% set(gca,'xtick',0:0.25:1,'ytick',0:0.25:1,'xticklabel',[],'yticklabel',[])% print -depsc ortharr.eps% % %break% % xnet=[%   0  0  0  0  0  0  0  0  0  0  0  0  0  0  0%   1  8  8  8  8  8  1  1  8  1  8  1  8  1  1%   2  4 12  4 12  1  8  8  9  8  1  8  9  2  2%   3 12  4 12  4  9  9  9  1  9  9  9  1  3  3%   4  1  5  9 13  2 10  2 10 10 10  2  2  8  8%   5  9 13  1  5 10 11  3  2 11  2  3 10  9  9%   6  5  9 13  1  3  2 10  3  2 11 10 11 10 10%   7 13  1  5  9 11  3 11 11  3  3 11  3 11 11%   8  2 10  6  6 12 12 12 12  4 12  4  4  4 12%   9 10  2 14 14  4 13 13  4  5  4  5 12  5 13%  10  6  6  2 10 13  4  4  5 12 13 12 13  6 14%  11 14 14 10  2  5  5  5 13 13  5 13  5  7 15%  12  3 15 15 11 14  6 14  6 14  6  6  6 12  4%  13 11  7  7  3  6  7 15 14 15 14  7 14 13  5%  14  7  3 11  7 15 14  6 15  6  7 14 15 14  6%  15 15 11  3 15  7 15  7  7  7 15 15  7 15  7];% % xnet=[%     0  0%     1 15%     2 10%     3  5%     4 12%     5  3%     6  6%     7  9%     8  8%     9  7%    10  2%    11 13%    12  4%    13 11%    14 14%    15  1 %    ];% % xscr=[%   0  9 13  6 13  4  6  8  7  4  2  2  9 12  0%   1  3  1  9  6  9  7  9 15  5 14  3  4 13  1%   2 15  5  0  0  5 13  6 14  9  3 15  5 15  3%   3  5  9 15 11  8 12  7  6  8 15 14  8 14  2%   4  8  8  8  1  6 15 10 12 11 12  0 11  7 14%   5  2  4  7 10 11 14 11  4 10  0  1  6  6 15%   6 14  0 14 12  7  4  4  5  6 13 13  7  4 13%   7  4 12  1  7 10  5  5 13  7  1 12 10  5 12%   8 10  2  3  9 14 10  3 11  3 11  7 14 11 10%   9  0 14 12  2  3 11  2  3  2  7  6  3 10 11%  10 12 10  5  4 15  1 13  2 14 10 10  2  8  9%  11  6  6 10 15  2  0 12 10 15  6 11 15  9  8%  12 11  7 13  5 12  3  1  0 12  5  5 12  0  4%  13  1 11  2 14  1  2  0  8 13  9  4  1  1  5%  14 13 15 11  8 13  8 15  9  1  4  8  0  3  7%  15  7  3  4  3  0  9 14  1  0  8  9 13  2  6];% % % xnet=(xnet+0.5)/16; xscr=(xscr+0.5)/16;% % figure; % h=plot(xnet(:,1),xnet(:,2),'rs'); set(h,'linewidth',6);% axis('equal'); axis([0 1 0 1]);  hold on% %xlabel('Factor 1'); ylabel('Factor 2');% set(gca,'GridLineStyle','--')% set(gca,'xtick',0:0.0625:1,'ytick',0:1:1,'xticklabel',[],'yticklabel',[])% grid on% print -depsc x1612-0.eps% set(gca,'xtick',0:0.125:1,'ytick',0:0.5:1,'xticklabel',[],'yticklabel',[])% grid on% print -depsc x1612-1.eps% set(gca,'xtick',0:0.25:1,'ytick',0:0.25:1,'xticklabel',[],'yticklabel',[])% grid on% print -depsc x1612-2.eps% set(gca,'xtick',0:0.5:1,'ytick',0:0.125:1,'xticklabel',[],'yticklabel',[])% grid on% print -depsc x1612-3.eps% set(gca,'xtick',0:1:1,'ytick',0:0.0625:1,'xticklabel',[],'yticklabel',[])% grid on% print -depsc x1612-4.eps% break% % figure; % h=plot(xnet(:,1),xnet(:,3),'rs'); set(h,'linewidth',6);% axis('equal'); axis([0 1 0 1]);  hold on% %xlabel('Factor 1'); ylabel('Factor 3');% set(gca,'GridLineStyle','--')% set(gca,'xtick',0:0.0625:1,'ytick',0:1:1,'xticklabel',[],'yticklabel',[])% grid on% print -depsc x1613-0.eps% set(gca,'xtick',0:0.125:1,'ytick',0:0.5:1,'xticklabel',[],'yticklabel',[])% grid on% print -depsc x1613-1.eps% set(gca,'xtick',0:0.25:1,'ytick',0:0.25:1,'xticklabel',[],'yticklabel',[])% grid on% print -depsc x1613-2.eps% set(gca,'xtick',0:0.5:1,'ytick',0:0.125:1,'xticklabel',[],'yticklabel',[])% grid on% print -depsc x1613-3.eps% set(gca,'xtick',0:1:1,'ytick',0:0.0625:1,'xticklabel',[],'yticklabel',[])% grid on% print -depsc x1613-4.eps% % figure; % h=plot(xnet(:,2),xnet(:,3),'rs'); set(h,'linewidth',6);% axis('equal'); axis([0 1 0 1]);  hold on% %xlabel('Factor 2'); ylabel('Factor 3');% set(gca,'GridLineStyle','--')% set(gca,'xtick',0:0.0625:1,'ytick',0:1:1,'xticklabel',[],'yticklabel',[])% grid on% print -depsc x1623-0.eps% set(gca,'xtick',0:0.125:1,'ytick',0:0.5:1,'xticklabel',[],'yticklabel',[])% grid on% print -depsc x1623-1.eps% set(gca,'xtick',0:0.25:1,'ytick',0:0.25:1,'xticklabel',[],'yticklabel',[])% grid on% print -depsc x1623-2.eps% set(gca,'xtick',0:0.5:1,'ytick',0:0.125:1,'xticklabel',[],'yticklabel',[])% grid on% print -depsc x1623-3.eps% set(gca,'xtick',0:1:1,'ytick',0:0.0625:1,'xticklabel',[],'yticklabel',[])% grid on% print -depsc x1623-4.eps% % break% % figure; % h=plot(xscr(:,1),xscr(:,2),'rs'); set(h,'linewidth',6);% axis('equal'); axis([0 1 0 1]);  hold on% xlabel('Factor 1'); ylabel('Factor 2');% set(gca,'GridLineStyle','--')% set(gca,'xtick',0:0.0625:1,'ytick',0:1:1,'xticklabel',[],'yticklabel',[])% grid on% print -depsc xscr1612-0.eps% set(gca,'xtick',0:0.125:1,'ytick',0:0.5:1,'xticklabel',[],'yticklabel',[])% grid on% print -depsc xscr1612-1.eps% set(gca,'xtick',0:0.25:1,'ytick',0:0.25:1,'xticklabel',[],'yticklabel',[])% grid on% print -depsc xscr1612-2.eps% set(gca,'xtick',0:0.5:1,'ytick',0:0.125:1,'xticklabel',[],'yticklabel',[])% grid on% print -depsc xscr1612-3.eps% set(gca,'xtick',0:1:1,'ytick',0:0.0625:1,'xticklabel',[],'yticklabel',[])% grid on% print -depsc xscr1612-4.eps% % % % break% % % %Draw Net% % b=2; mmax=10; nmax=b^mmax;% imat=[0 1]; for i=2:mmax; imat=[imat imat; zeros(1,b^(i-1)) ones(1,b^(i-1))]; end% xnet(1,:)=(b.^(-(1:mmax)))*imat;% C2=1; m=0; for m=1:mmax-1; C2=[[C2; zeros(1,m)] rem([C2(:,m);0]+[0;C2(:,m)],2) ]; end% xnet(2,:)=(b.^(-(1:mmax)))*rem(C2*imat,b);% n0=16;% figure; % h=plot(xnet(1,1:n0),xnet(2,1:n0),'rs'); set(h,'linewidth',6);% axis('equal'); axis([0 1 0 1]);  hold on% h=plot(xnet(1,6),xnet(2,6),'bs'); set(h,'linewidth',6);% set(gca,'xtick',0:0.25:1,'ytick',0:0.25:1,'xticklabel',[],'yticklabel',[])% title('16 points, dimension 4');% print -depsc net16-0.eps% gray=0.9*ones(1,3);% h=patch([0.5 0.5 0.5625 0.5625],[0 1 1 0],gray);% h=patch([0 1 1 0],[0.1875 0.1875 0.25 0.25],gray);% h=patch([0.875 1 1 0.875],[0.5 0.5 1 1],gray);% h=patch([0.5 0 0 0.5],[0.875 0.875 1 1],gray);% h=patch([0.25 0 0 0.25],[0.25 0.25 0.5 0.5],gray);% h=plot(xnet(1,1:n0),xnet(2,1:n0),'rs'); set(h,'linewidth',6);% h=plot(xnet(1,6),xnet(2,6),'bs'); set(h,'linewidth',6);% print -depsc net16-1.eps% % break% % %Draw Lattices% b=2; mmax=10; nmax=b^mmax;% imat=[0 1]; for i=2:mmax; imat=[imat imat; zeros(1,b^(i-1)) ones(1,b^(i-1))]; end% xnet(1,:)=(b.^(-(1:mmax)))*imat;% C2=1; m=0; for m=1:mmax-1; C2=[[C2; zeros(1,m)] rem([C2(:,m);0]+[0;C2(:,m)],2) ]; end% xnet(2,:)=(b.^(-(1:mmax)))*rem(C2*imat,b);% n0=16; n=n0; m=6;% for i=0:m;% figure; h=plot(xnet(1,1:n),xnet(2,1:n),'rs'); hold on% set(h,'LineWidth',6); % axis('equal'); axis([0 1 0 1]); % set(gca,'xtick',0:0.25:1,'ytick',0:0.25:1,'xticklabel',[],'yticklabel',[])% eval(['print -depsc net1024-' int2str(i) '.eps'])% n=2*n;% end% % %Draw Lattice% hgen=245;% n0=16; m=6; xf=rem([0:n0-1; hgen*(0:n0-1)]/n0,1);  n=n0;% for i=1:m; n=2*n; xf=[xf rem([1:2:n-1; hgen*(1:2:n-1)]/n,1)]; end% figure; h=plot(xf(1,1:n0),xf(2,1:n0),'rs'); set(h,'LineWidth',6); hold on% axis('equal'); axis([0 1 0 1]); title('16 points, dimension 4');% set(gca,'xtick',0:0.25:1,'ytick',0:0.25:1,'xticklabel',[],'yticklabel',[])% print -depsc latt16-0.eps% print -depsc latt1024-0.eps% %delete(h); axis off% h=plot([5 8]/n0,[9 8]/n0,'b-',[5 6]/n0,[9 14]/n0,'b-'); set(h,'LineWidth',4);% print -depsc latt16-1.eps% % %Draw Lattices% n=n0;% for i=0:m;% figure; h=plot(xf(1,1:n),xf(2,1:n),'rs'); hold on% set(h,'LineWidth',6); % axis('equal'); axis([0 1 0 1]); % set(gca,'xtick',0:0.25:1,'ytick',0:0.25:1,'xticklabel',[],'yticklabel',[])% eval(['print -depsc latt1024-' int2str(i) '.eps'])% n=2*n;% end% % %break% % % % %Draw Bumps% m=4; nbump=2^m; aspect=0.25;% xnode=[0.35 0.42 0.78 0.80 0.1 0.45 0.37 0.22]; n=length(xnode);% nplot=2^10; xplot=(0:nplot)/nplot;% %y1plot=1-2*abs(rem(nbump*xplot,1)-1/2);% y1plot=rem(nbump*xplot,1).*(1-rem(nbump*xplot,1)); y1plot=y1plot.^4;% y1plot=aspect*y1plot./max(y1plot);% y2plot=ones(size(xplot));% for i=1:n; y2plot(find(floor(nbump*xplot)==floor(nbump*xnode(i))))=0; end% figure; % %h=plot(xplot,y1plot,'k--',xplot,y1plot.*y2plot,'k-'); % h=plot(xplot,y1plot.*y2plot,'k-'); % set(h,'LineWidth',2)% hold on;% h=plot(xnode,zeros(size(xnode)),'rs'); set(h,'LineWidth',6)% axis equal; axis([0 1 0 aspect]);% set(gca,'ytick',[],'yticklabel',[])% %xlabel('{\it x}'); ylabel('{\it f}_{bad}')% print -depsc bumps.eps% % %Draw rectangle and trapezoidal rules% fun=inline('exp(-x.*x/2)/sqrt(2*pi)','x')% n=4; m=300;% a=0; b=2; bma=b-a;% % xtick=a+bma*(0:0.25:1);% % xplot=a+bma*(0:m)/m; fplot=fun(xplot);% xleft=a+bma*(0:n-1)/n; fleft=fun(xleft);% xright=a+bma*(1:n)/n; fright=fun(xright);% xpleft=[xleft; xright]; xpleft=xpleft(:)'; % fpleft=[fleft; fleft]; fpleft=fpleft(:)'; % xtrap=a+bma*(0:n)/n; ftrap=fun(xtrap);% % prob1=(1 -exp(-2))/(sqrt(2*pi))% prob2=quad(fun,a,b)% % figure;% h=plot(xplot,fplot,'k-',xpleft,fpleft,'r-'); set(h,'linewidth',2)% axis([a b 0 0.5]); set(gca,'xtick',xtick,'ytick',[0 0.5]); refresh% print -depsc leftrect.eps% % figure;% h=plot(xplot,fplot,'k-',xtrap,ftrap,'r-'); set(h,'linewidth',2)% axis([a b 0 0.5]); set(gca,'xtick',xtick,'ytick',[0 0.5]); refresh% print -depsc trap.eps