%Computing pi by Monte Carloclose all; clear allset(0,'defaultaxesfontsize',18,'defaulttextfontsize',18)nrun=1000; %number of different simulationsnsam=10000; %number of samples per simulationpiappx=ones(nrun,1); errpi=piappx;for k=1:nrun	x=2*rand(nsam,2)-1; %nrun random vectors on [-1,1]^2	r2=x(:,1).*x(:,1)+x(:,2).*x(:,2);	piappx(k,1)=4*sum(r2<=1)/nsam; %count how many times x inside circle	errpi(k,1)=pi-piappx(k); %true error of approximation	se(k,1)=sqrt(piappx(k,1)*(4-piappx(k,1))/nsam); %standard errorendorderr=sort(errpi); prob=([1:nrun]'-0.5)/nrun; %probabilitiesfigure; h=plot(orderr,prob,'-b'); set(h,'linewidth',2)xlabel('Error in Approximating \pi');ylabel('Probability');sd=sqrt(pi*(4-pi)/nsam); %true standard deviationhold on; h=plot(sd*[1 1]'*[-2 -1 1 2],[zeros(4,1) ones(4,1)]','k--');set(h,'linewidth',2)text(sd*[-2 -1 1 2]',0.1*ones(4,1),['-2 \sigma';'-1 \sigma';' 1 \sigma';' 2 \sigma'])axis([[-5 5]/sqrt(nsam) 0 1])eval(['print -depsc PiAppxMC' int2str(nrun) '.eps'])ci=piappx*[1 1]+1.96*sd*ones(nrun,1)*[-1 1]; %confidence intervalsciappx=piappx*[1 1]+1.96*se*[-1 1]; %approx confidence intervalsout=find(pi<ci(:,1) | pi>ci(:,2)); %where pi is outside confidence intervalnout=size(out) %number of confidence intervals not containing pioutappx=find(pi<ciappx(:,1) | pi>ciappx(:,2)); %where pi is outside confidence intervalnoutappx=size(outappx) %number of confidence intervals not containing pi