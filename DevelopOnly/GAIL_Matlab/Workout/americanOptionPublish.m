%% Pricing American Option with Monte Carlo
% American Option is a type of option that can be exercised at any time 
% during its life, which should be more valuable than European Option.
%
% There are two different types of options, *calls* and *puts*:
%
% * A call gives the holder the right to buy an asset at a certain price 
% within a specific period of time. Buyers of calls hope that the stock 
% will increase substantially before the option expires.
% * A put gives the holder the right to sell an asset at a certain price 
% within a specific period of time. Buyers of puts hope that the price of 
% the stock will fall before the option expires.
%
% However, we only calculate American put option, regardless of call
% option.
%% Payoffs of American Option
%
% Call Option:
%
% \[max(S(t)-K, 0)\]
%
% Put option:
%
% \[max(K-S(t), 0)\]
%
% where:
%
% \(K\) - strike price
%
% We apply Longstaff and Schwartz Least Square Method to price the option. 
% This method calculates the predicted future payoffs based on the paths 
% generated by Brownian Motion, then compares the predicted payoff with the 
% payoff when option is exercised immediately and decides if option should 
% be exercised. After the recursive process, the final American option
% payoff is the average payoff of all the paths.

%% Generate American Option Price using Monte Carlo Method
% _optPrice_ is a MATLAB(R) class that generates the prices for options. 
% _optPrice_ uses many different variables and it has many superclasses:
superclasses(optPrice)

%%
% To calculate the American option price, we first need to construct several parametrer values:
%Payoff Parameters:
inp.payoffParam.optType = {'american'};       % american Option
inp.payoffParam.putCallType = {'put'};        % put
inp.payoffParam.strike = 12;                  % strike price

%Asset Path Parameters: 
inp.assetParam.initPrice = 11;                % initial Asset Prices
inp.assetParam.interest = 0.01;               % 1% interest rate
inp.assetParam.volatility = 0.5 ;             % volatility

%Option Price Parameters
inp.priceParam.cubMethod = 'IID_MC';          % type of pricing scheme
inp.priceParam.absTol = 0.01;   
inp.priceParam.relTol = 0;                    % 1% relative tolerance

%Stochastic Process
inp.timeDim.timeVector = 1;                   % Defining the Time as one trimester.

%%
% Then we generate a class that evaluates the option price.
tic, AmericanOption = optPrice(inp), toc

%%
% Now we generate the American option price using Independent Identically Distributed (IID) sampling
n=5; %number of sampling

for i=1:n
    tic, 
    iid_AmericanOptionPrice(i) = genOptPrice(AmericanOption);
    , toc
end
iid_AmericanOptionPrice
%%
% The function _genOptPrice_ is calledfrom the IID Monte Carlo method for 
% Finance in <https://code.google.com/p/gail/ GAIL> Repository(meanMC_g).

%% Plot of Payoffs Generated by Monte Carlo Method
% The plot of payoffs is generated below, which is a cumulative probability
% graph.
plot(AmericanOption,1e4);

%% References
%
% Longstaff, Francis, and Eduardo Schwartz. "Valuing American Option by 
% Simulation: A Simple Least-Squares Approach." Web. 28 July 2015.
%
% "American Option Definition | Investopedia." Investopedia. 18 Nov. 2003. 
% Web. 28 July 2015.